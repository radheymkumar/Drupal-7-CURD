<?php

function custom_curd_menu(){
	$items['admin/custom/table/add'] = array(
		'title' => 'My Custom Table Add',
		'description' => 'View My Custom Table.',
		'page callback' => 'my_custom_table_block_view',
		'access arguments' => array('access my_custom_table'),
		'weight' => -14,
	);
	$items['admin/custom/table/%/edit'] = array(
		'title' => 'My Custom Table Edit',
		'description' => 'View My Custom Table.',
		'page callback' => 'my_custom_table_edit_block_view',
		'page argument' => array(3),
		'access arguments' => array('access my_custom_table'),
		'weight' => -14,
	);
	$items['admin/custom/table/%/delete'] = array(
		'title' => 'My Custom Table Delete',
		'description' => 'View My Custom Table.',
		'page callback' => 'my_custom_delete',
		'page argument' => array(3),
		'access arguments' => array('access my_custom_table'),
		'weight' => -14,
	);
	$items['admin/custom/table/list'] = array(
		'title' => 'My Custom Table List',
		'description' => 'View My Custom Table.',
		'page callback' => 'my_custom_table_sort_with_pager_content',
		'access arguments' => array('access my_custom_table'),
		'weight' => -14,
	);
	return $items;
}

function my_custom_table_block_view($block_name =""){
	if(drupal_is_front_page()){
		return NULL;
	}
	$form = drupal_get_form('my_custom_table_form');
	$block = array(
			'subject' => t('Subject'),
			'content' => $form,
		);
	return $block;
}

function my_custom_table_form($form, &$form_state){
	$form['title'] = array(
		'#type' => 'textfield',
		'#title' => 'Title',
		'#description' => 'Title My Custom Table',
		'#size' => 40,
		'#maxlength' => 120,
		'#required' => TRUE,
	);
	$form['description'] = array(
		'#type' => 'textarea',
		'#rows' => 5,
		'#cols' => 40,
		'#title' => 'Description',
		'#required' => TRUE,
		'#description' => 'Description My Custom Table',
	);
	$form['active'] = array(
		'#type' => 'checkbox',
		'#title' => t('Status'),
		'#description' => 'Active My Custom Table',
	);
	$form['submit'] = array(
		'#type' => 'submit',
		'#value' => t('Save'),
	);

	// and now I assign a my function as handler of the submit event
	// $form['#validate'][] = 'my_custom_table_submit_handler';
	$form['#submit'][] = 'my_custom_table_submit_handler';

	return $form;
}

function my_custom_table_submit_handler($form, &$form_state) {
	
	$error = 1;
		if ( !isset($form_state['values']['title']) || !isset($form_state['values']['title']) ) {
			$error = 0 ;
		};

		if($error){
			$title = $form_state['values']['title'];
			$description = $form_state['values']['description'];
			$active = $form_state['values']['active'];
			
			db_insert('custom_table')
				->fields(array(
						'title' => $title,
						'description' => $description
					))
				->execute();
			drupal_set_message(t('Record has been added!'));
		}
}

function my_custom_table_sort_with_pager_content() {
	$header = array(
		array('data' => t('ID'), 'field' => 'id', 'sort' => 'asc'),
		array('data' => t('Title'), 'field' => 'title'),
		array('data' => t('Status'), 'field' => 'active'),
		array('data' => t('Action')),
	);
	//echo "<pre>";
	$query = db_select('custom_table','c');
	$query->fields('c', array('id','title','status'));

	$tabl_sort = $query->extend('TableSort')
				->orderByHeader($header);

	$pager = $tabl_sort->extend('PagerDefault')
				->limit(5);

	$result = $pager->execute();						

	$rows = array();

	foreach ($result as $value) {
		$rows[] = array(
				$value->id,
				$value->title,
				$value->status,
				"Edit | Delete"
			);
	}

	if(!empty($rows)) {
		$output = theme('table', array('header' => $header, 'rows' => $rows, 'attributes' => array('id'=>'sort-table')));
		$output .= theme('pager');
	} else {
		@$output .= t('No Record Found..');
	}

	@$output .= 'Add New Record';

	return $output;

}

function my_custom_delete() {
	$id = arg(3);
	db_delete('custom_table')
		->condition('id', $id, '=')
		->execute();
	drupal_set_message('Record has been deleted!');
	 cache_clear_all('*', 'cache_field', TRUE);
	drupal_goto('admin/custom/table/list');	
}

function my_custom_table_edit_block_view($block_name = "") {
	if(drupal_is_front_page()){
		return NULL;
	}

	$form = drupal_get_form('my_custom_table_edit_form');
	$block = array(
			//'subject' => 'Subject',
			'content' => $form,
		);	
	//$block['content'][] .= 'Back to Listing';
	return $block;
}

function my_custom_table_edit_form($form, &$form_state) {

	$id = arg(3);
	$result = db_query('SELECT * FROM {custom_table} WHERE id = :id', array(':id'=>$id));
	$record = $result->fetchObject();
	//print_r($record);

	$form['title'] = array(
		'#type' => 'textfield',
		'#title' => 'Title',
		'#value' => t($record->title),
		'#description' => 'Update Title',
		'#size' => 40,
		'#maxlength' => 120,
		'#required' => TRUE,
	);
	$form['description'] = array(
		'#type' => 'textarea',
		'#title' => 'Description',
		'#rows' => 5,
		'#cols' => 40,
		'#value' => $record->description,
		'#required' => TRUE,
		'#description' => 'Update Description',

	);
	$form['id'] = array(
		'#type' => 'textfield',
		'#title' => 'ID',
		'#value' => $id,
	);
	$form['active'] = array(
		'#type' => 'checkbox',
		'#title' => 'Status',
		'#description' => 'Update Status',
	);
	$form['submit'] = array(
		'#type' => 'submit',
		'#value' => 'Save',
	);
	// and now I assign a my function as handler of the submit event
	// $form['#validate'][] = 'my_custom_table_submit_handler';
	$form['#submit'][] = 'my_custom_table_edit_submit_handler';

	return $form;
}

function my_custom_table_edit_submit_handler($form, &$form_state){
	$id = $form_state['values']['id'];
	$title = $form_state['input']['title'];
	$description = $form_state['input']['description'];
	
	$data = array(
		'title' => $title,
		'description' => $description,
	);

	db_update('custom_table')
		->fields($data)
		->condition('id', $id, '=')
		->execute();
	drupal_set_message('Record has been updated!');	
}


function custom_curd_permission() {
return array(
	'access my_custom_table' => array(
	'title' => t('View CURD Custom Table'),
	'description' => t('Customizing the My Custom Table requires the !permission-name permission.', array(
	'!permission-name' => l(t('Administer blocks'), 'admin/people/permissions', array('fragment' => 'module-custom_curd')),
	)),
	),
  );
}